---
title: "Social Vulerability"
format: html
---

## What this dataset depicts

To characterize social vulnerability, we utilized the Social Vulnerability Index (SVI) dataset.

* Originally developed for emergency response strategy, the SVI is now used in various applications, including health behavior studies and natural disaster impact documentation.
* The dataset includes fifteen socioeconomic and demographic factors grouped into four themes: socioeconomic status; household composition; race, ethnicity, and language; and housing and transportation.
* While not perfect, (see Spielman et al., 2020), it has been used in similar studies recently and is easily available, making this and other work reproducible (see Rad et al., 2023). The SVI data is delivered by census tract or county, and for this study, we used the SVI data at the county scale for consistency with the datasets described further below.  

## CONUS-wide SVI

The map below depicts the "RPL_THEMES", or overall SVI ranking variable.  

![](assets/svi_full.jpg){fig-alt="A drawing of an elephant."}

<br>

In 2018, roughly 15% of Americans (49,626,105 people in 643 out of 3,143 counties) had an SVI rating > 0.8, indicating high levels of vulnerability to external stressors. Conversely, roughly 13% (41,039,615) had an SVI rating < 0.2 (SVI ranges from 0.0 - 1.0)(see chart below).

<br>

```{r}
#| label: svi_chart
#| echo: false
#| message: false
#| warning: false
#| fig.width: 12
## load packages
library(tidyverse)
library(scales)

## read data
svi <- read.csv("data/rpl_themes.csv")

## add intervals to match ArcGIS quantiles (mostly for labels)
svi <- svi %>%
      mutate(quantiles =cut(rpl_themes, 
                            breaks = c(
                              0,
                              0.2,
                              0.4,
                              0.6,
                              0.8,
                              1.0),
                            labels = c(
                              "0 - 0.2",
                              "0.2 - 0.4",
                              "0.4 - 0.6",
                              "0.6 - 0.8",
                              "0.8 - 1.0")
                            ))

## create colors to match map
colors <- c(
  "#EDF8FB",
  "#B3CDE3",
  "#8C96C6",
  "#8856A7",
  "#632360"
  
)


# group by quantiles for chart
svi_pop_quantiles <- svi %>%
  group_by(quantiles) %>%
  summarize(total_pop = sum(e_pop)) %>%
  mutate(percentage = round(total_pop/sum(total_pop)*100))

# make chart

svi_quantiles_pop_chart <-
  ggplot(svi_pop_quantiles, aes(x = quantiles, y = total_pop, fill = quantiles)) +
  geom_bar(stat = 'identity', color = '#3d3d3d') +
  coord_flip() +
  labs(
    title = "Social Vulnerability Index for CONUS (equal intervals)",
    y = "Number of individuals per SVI quantile"
    ) +
  scale_fill_manual(values = c(
    "#EDF8FB",
    "#B3CDE3",
    "#8C96C6",
    "#8856A7",
    "#632360"  )) +
  scale_y_continuous(labels = comma) +
  # geom_text(aes(label = paste0(percentage, "%")),
  #           #vjust = -0.0, 
  #           hjust = -0.15, 
  #           color = "black",
  #           size = 14) + 
  theme_bw(base_size = 18) +
  theme(legend.position = 'none') +
  # theme(plot.margin = margin(0, #top
  #                            3, #right
  #                            0, # bottom
  #                            0, #left
  #                            "cm")) + 
  expand_limits(y = 160000000) + 
  theme(
    text = element_text(color = "black"),
    title = element_text(color = "black"),
    axis.title = element_text(color = "black"),
    axis.text = element_text(color = "black"),
    axis.ticks = element_line(color = "black"),
    panel.grid = element_line(color = "black"),
    legend.text = element_text(color = "black"),
    legend.title = element_text(color = "black"),
    panel.background = element_rect(fill = 'transparent'), #transparent panel bg
    plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
    panel.grid.major = element_blank(), #remove major gridlines
    panel.grid.minor = element_blank(), #remove minor gridlines
    legend.background = element_rect(fill = 'transparent'), #transparent legend bg
    legend.box.background = element_rect(fill = 'transparent'), #transparent legend panel
    panel.border = element_blank(), axis.line = element_line(),
    #axis.title.y = element_blank(),
    #axis.text.y = element_blank(),
    axis.ticks.y = element_blank())


svi_quantiles_pop_chart

```

